--- system_MM32SPIN2xx_p.c.ORIG	2023-10-01 12:39:08.184291379 +0200
+++ system_MM32SPIN2xx_p.c	2023-10-01 12:37:15.897386953 +0200
@@ -171,6 +171,36 @@
     /* Configure the System clock frequency, HCLK, PCLK2 and PCLK1 prescalers */
     /* Configure the Flash Latency cycles and enable prefetch buffer */
     SetSysClock();
+
+    /* Start clock for hardware division */
+    RCC->AHBENR |= RCC_AHBENR_HWDIVEN;
+}
+
+
+/* routine for unsigned integer division.
+   We cannot use '/' to divide, because the division routines in libgcc.a use the hardware divider HWDIV.
+   the hardware divider runs from the AHB clock,
+   and at this point in the boot process we still do not have a AHB clock.
+ */
+
+u32 u32_divide (u32 num, uint32_t den)
+{
+  u32 bit = 1;
+  u32 res = 0;
+
+  while (den < num && bit && !(den & (1L << 31))) {
+    den <<= 1;
+    bit <<= 1;
+  }
+  while (bit) {
+    if (num >= den) {
+      num -= den;
+      res |= bit;
+    }
+    bit >>= 1;
+    den >>= 1;
+  }
+  return res;
 }
 
 /**
@@ -191,7 +221,8 @@
     {
         for(n = 0; n < 64 ; n++)
         {
-            tempFrq =  pllclkSourceFrq * (n + 1) / (m + 1);
+//            tempFrq =  pllclkSourceFrq * (n + 1) / (m + 1);
+            tempFrq =  u32_divide(pllclkSourceFrq * (n + 1), m + 1);
             tempFrq = (tempFrq >  pllclkFrq) ? (tempFrq - pllclkFrq) : (pllclkFrq - tempFrq) ;
 
             if(minDiff > tempFrq)
@@ -597,7 +628,8 @@
         FLASH->ACR |= FLASH_ACR_PRFTBE;
         /* Flash 0 wait state ,bit0~2*/
         FLASH->ACR &= ~0x07;
-        temp = (SystemCoreClock - 1) / 24000000;
+        //temp = (SystemCoreClock - 1) / 24000000;
+        temp = u32_divide(SystemCoreClock - 1, 24000000);
         FLASH->ACR |= temp;
 
 #if 1
@@ -775,7 +807,8 @@
     /* Flash 0 wait state ,bit0~2*/
     FLASH->ACR &= ~0x07;
 
-    temp = (SystemCoreClock - 1) / 24000000;
+    //temp = (SystemCoreClock - 1) / 24000000;
+    temp = u32_divide(SystemCoreClock - 1, 24000000);
 
     FLASH->ACR |= temp;
 
